
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNIUtilitiesSpec/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

RNIDetachedViewProps::RNIDetachedViewProps(
    const PropsParserContext &context,
    const RNIDetachedViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    rawDataForNative(convertRawProp(context, rawProps, "rawDataForNative", sourceProps.rawDataForNative, {})),
    shouldImmediatelyDetach(convertRawProp(context, rawProps, "shouldImmediatelyDetach", sourceProps.shouldImmediatelyDetach, {false})),
    reactChildrenCount(convertRawProp(context, rawProps, "reactChildrenCount", sourceProps.reactChildrenCount, {0}))
      {}
RNIDummyTestViewProps::RNIDummyTestViewProps(
    const PropsParserContext &context,
    const RNIDummyTestViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    someBool(convertRawProp(context, rawProps, "someBool", sourceProps.someBool, {})),
    someString(convertRawProp(context, rawProps, "someString", sourceProps.someString, {})),
    someStringOptional(convertRawProp(context, rawProps, "someStringOptional", sourceProps.someStringOptional, {})),
    someNumber(convertRawProp(context, rawProps, "someNumber", sourceProps.someNumber, {})),
    someNumberOptional(convertRawProp(context, rawProps, "someNumberOptional", sourceProps.someNumberOptional, {})),
    someObject(convertRawProp(context, rawProps, "someObject", sourceProps.someObject, {})),
    someObjectOptional(convertRawProp(context, rawProps, "someObjectOptional", sourceProps.someObjectOptional, {})),
    someArray(convertRawProp(context, rawProps, "someArray", sourceProps.someArray, {})),
    someArrayOptional(convertRawProp(context, rawProps, "someArrayOptional", sourceProps.someArrayOptional, {}))
      {}
RNIWrapperViewProps::RNIWrapperViewProps(
    const PropsParserContext &context,
    const RNIWrapperViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    rawDataForNative(convertRawProp(context, rawProps, "rawDataForNative", sourceProps.rawDataForNative, {}))
      {}

} // namespace facebook::react
